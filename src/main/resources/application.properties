server.port=8080

###?createDatabaseIfNotExist=true
spring.datasource.url=jdbc:mariadb://localhost:3306/springboot_mariadb
spring.datasource.username=root
####spring.datasource.password=""
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=create-drop
# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect

hibernate.hbm2ddl.import_files="/import.sql"














# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection
#######################spring.datasource.url=jdbc:mariadb:209.124.64.42:3306/springboot_mariadb
######spring.datasource.url=jdbc:mariadb://209.124.64.42:13306/
######spring.datasource.username=dredev
######spring.datasource.password=IFw41TvoyqNJs9CYkv1p
######pring.datasource.driver-class-name=org.mariadb.jdbc.Driver
# Keep the connection alive if idle for a long time (needed in production)
#####spring.datasource.testWhileIdle=true
#####spring.datasource.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
##########################spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
##########################spring.jpa.hibernate.ddl-auto=create-drop
# Naming strategy
##########################spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
##########################spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
# Allows Hibernate to generate SQL optimized for a particular DBMS
##########################spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
